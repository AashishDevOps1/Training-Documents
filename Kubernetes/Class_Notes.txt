######################
Day 8 - 18th Feb. 2024
######################	
	
		
	Container Orchestration using Kubernetes :::
	
			Kubernetes :
					Is the Open Source Container Orchestration Tool used to manage the Containers.
					Used to ensure High availability of Containers.
					Create Replicas of Containers
					Auto-Scaling 
					Load Balancing

		
			Managed Services :::
				AWS 		- ECS,ECR,EKS
				
				AZURE 	- ACS,ACR,AKS
				
				GCP 		- GCE,GCR,GKE
				
				
			- Kubernetes Architecture  #Important!
			
				Kubernetes_Master 
					Kubernetes_Cluster
						Kubernetes_WorkNode1
						Kubernetes_WorkNode2
						Kubernetes_WorkNode3
								
			- Kubernetes Terminologies / Concepts 
			
				- kubelet - Agent runs in all the nodes for pod deployments	
				
				- kubeadm - Utility to install and configure the Kubernetes.
				
				- kubectl - Is  CLI used to interact with Kubernetes Master
				
				- Images  - Is a static file defines the properties of the Container - Non-Executable - maintained in the Container Registry
				
				- Contiainers 	- Executable units of the Images 
				
				- CRI - Container Runtime Interface - used by kubernetes to access the Container Images 
						
			- Installation Kubernetes Cluster :
			
				- Kubernetes - MiniKube
				
				- Kubernetes - kubeadm utility
				
				1. Launch 3 VMs 
				
				Commands to be executed in all the Nodes ::
					2. Enable all the Required Ports
					
					3. Assign Unique Host Name 
					
					4. Install Docker Engine 
					
					5. Install CRI - ContainerD 
					
					6. Install Kubeadm, Kubelet, Kubectl
					
					7. Swap off 
			
				Commands to be executed only in Master Node ::
					
					1. kubeadm init 
					
				Command to be executed in all the Worker Nodes ::
					
					1. kubeadm join 				


				
			- Concepts 
			
				- Pods
				
				- Pod Networking 
				
				- Namespaces 
				
				- Controller Objects 
					- Deployment 
					- Replicaset 
					
				- Services
					- NodePort 
					- ClusterIP
					- LoadBalancer

				- Volumes 
					- Persistant Volumes 
######################
Day 9 - 24th Feb. 2024
######################			
	
	Kubernetes Concepts :

		- Pods
		
		- Pod Networking 
		
		- Namespaces 
		
		- Controller Objects 
			- Deployment 	- ZERO Downtime.
			
				- Used to create replicas of pods 	- v1.0 - initial version 
				- Used to Upgrade application 		- v1.2 - Latest Version 
				- Used to roll back the changes 	- Roll back the chages to v1.0
				- Used to Scale-Up the Pods
				- Used to Scale-Down the Pods 
				
				Deployment Strategy - Rolling-Update 
				
			- Replicaset		- used to create the replicas of pods  
			
		- Services
			- NodePort 
			- ClusterIP	
				- Default Kubernetes Service
				- Scope of this Service is within the cluster
				
				3 - Tier Application!
					
					Front-End			FE-Pods
					Application-Layer   AL-Pods
					Back-End(DBase) 	DB-Pods
				
			- LoadBalancer

		- Volumes 
			- Persistant Volumes
			
			- Hostpath Volume !
			
				To work with Stateful Applications 
			
			
		- Namespaces :::
		
			- Logical Partition on the Cluster

		Environments ::::
		
		
		DEV 			VM 
		
		QA 				VM 
		
		UAT 			VM 
			
		PROD			VM1,VM2,VM3 
		
		
		Kubernetes_Cluster		DEV / QA
			WN1,2,3,4,5,6
			
		Non-Prod Cluster					Prod_Cluster 
		
			NP_Kubernetes_Cluster				Prod_Kubernetes_Cluster1   --> V1.0
				WN1,2,3,4,5                 		WN1,2,3,4,5,6
												
												Namespace V2.0
													WN1,2,3,4,5,6
		Adhoc-Namespace1 										
												
		DEV Namespace 								Blue Green Deployments!
		QA Namespace									prod_Server1 - DOWN Server -> V1.0
		UAT Namespace									prod_Server2 - LIVE Server -> V2.0
		
		App1Team Namespace
				
		
